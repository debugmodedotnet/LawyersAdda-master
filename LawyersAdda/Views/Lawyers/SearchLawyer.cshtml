@using PagedList
@using PagedList.Mvc
@using System.Text.RegularExpressions
@model PagedList<LawyersAdda.Entities.Lawyer>
@{
    ViewBag.Title = "Lawyers";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<link href="~/Content/SearchLawyer.css" rel="stylesheet" />
<div class="container">
    <div class="row">
        <div class="col-md-10 col-md-offset-1">
            <div class="row">
                <div class="col-md-3">
                    <label class="filter-col" style="margin-right:0;" for="pref-perpage">Experience</label>
                    <select id="experience" class="form-control">
                        <option value="">Select experience</option>
                        <option value="1"> < 2 Years</option>
                        <option value="2"> > 2 and < 5 Years</option>
                        <option value="3"> > 5 Years</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label class="filter-col" style="margin-right:0;" for="courts">Choose Court</label>
                    <br />
                    <select class="form-control" id="courtList" multiple="multiple"></select>
                </div>
                <div class="col-md-3">
                    <label id="amount" class="filter-col" style="margin-right:0;" for="amount">Consulting fees:</label>
                    <br />
                    <div class="form-control" style="margin-top:10px;" id="slider-range"></div>
                </div>
                <div class="col-md-3">
                    <br />
                    <button type="button" id="applyFilter" class="btn btn-default">
                        <span class="glyphicon glyphicon-filter"></span> Redefine Search Result
                    </button>
                </div>
            </div>
            <div class="divider"></div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-10 col-md-offset-1">
                @foreach (var item in Model)
                {
                    <div class="row">
                        <div class="imgLawyerContainer col-md-3">
                            @if(item.ImageUrl != null)
                            {
                                <img class="imgLawyer pull-left img-thumbnail" src="@item.ImageUrl" />
                            }
                            else
                            {
                                <img class="imgLawyer pull-left" src="~/images/avatar_default.png" />
                            }
                        </div>
                        <div class="col-md-7">
                            <div class="title">
                                <div class="titleName">Adv. @item.Name</div>
                                <div class="CityAndWebsite"><i class="glyphicon glyphicon-map-marker"> </i> @item.City.CityName  |  <i class="glyphicon glyphicon-globe"> </i> <a href="@item.WebSiteUrl"> @item.WebSiteUrl</a> </div>
                                @if (item.Bio != null)
                                {
                                    Regex regex = new Regex("\\<[^\\>]*\\>");
                                    string ss = Html.Raw(item.Bio).ToHtmlString();
                                    ss=ss.Replace("&nbsp;", "");
                                    string strLT = ss.Replace("&lt;", "<");
                                    string strGT = strLT.Replace("&gt;", ">");
                                    string finalStr = regex.Replace(strGT, String.Empty);
                                    finalStr=finalStr.Replace("<br/>","");
                                    if (finalStr.Length > 200)
                                    {
                                        <div>@finalStr.Substring(0, 200) ...</div>
                                    }
                                    else
                                    {
                                        <div>@finalStr</div>
                                    }
                                }
                            </div>
                            <div class="row">
                                <div class="col-xs-2 lblLeft">Services: </div>
                                <div class="col-xs-10">
                                    @foreach (var service in item.ServiceTypes)
                                    {
                                        if (service != item.ServiceTypes.Last())
                                        {
                                            <a href="#"> @service.Name, </a>
                                        }
                                        else
                                        {
                                            <a href="#"> @service.Name</a>
                                        }
                                    }
                                </div>
                            </div>
                            <div class="row">
                                @if (item.Courts.Count > 0)
                                {
                                    <div class="col-xs-2 lblLeft">Courts: </div>
                                    <div class="col-xs-10">
                                        @foreach (var court in item.Courts)
                                        {
                                            if (court != item.Courts.Last())
                                            {
                                                <a href="#"> @court.Name, </a>
                                            }
                                            else
                                            {
                                                <a href="#"> @court.Name</a>
                                            }
                                        }
                                    </div>
                                }
                            </div>
                            <div class="row">
                                <div class="col-xs-12">
                                    <i class="glyphicon glyphicon-earphone"> </i> @item.PhoneNumber  |  <i class="glyphicon glyphicon-envelope"> </i> @item.Email
                                </div>
                            </div>
                        </div>
                        <div class="col-md-2 text-center">
                            <div class="HourlyCharge">
                               &#8377; @item.HourlyRate <br />
                            </div>
                            <div class="PerHour">
                                per/hour
                            </div>
                        </div>
                    </div>
                    <div class="divider"></div>
                }
        </div>
    </div>
    <div class="pagedList text-center">
        @if (@Model.Count > 0)
        {
            @Html.PagedListPager(Model, page => Url.Action("SearchLawyers", new { page }))
            <p>Showing @Model.FirstItemOnPage to @Model.LastItemOnPage of @Model.TotalItemCount Lawyers found</p>
        }
        else
        {
            <h3>I don't like when you play with URLs, we have total @Model.TotalItemCount lawyers as per your search criteria</h3>
        }
    </div>
</div>    
<div class="container" style="visibility:hidden">
    <h3>
        @Model.TotalItemCount lawyers found in
        <span id="cityName"></span>
    </h3>
    
</div>

<script>
    $(document).ready(function () {

        var cityName = document.getElementById("cityName");
        cityName.innerHTML = localStorage.getItem("MenuCityName");

        var selected = [];
        $('#courtList').multiselect({
            enableCaseInsensitiveFiltering: true,
            enableFiltering: true,
            onChange: function (element, checked) {
                var courts = $('#courtList option:selected');
                $(courts).each(function (index, court) {
                    selected.push($(this).val());
                });
            }
        });
        getCourts();

        var lowerRange = 0, upperRange = 500;
    $("#amount").text("Consulting Fees: $" + lowerRange + " - $" + upperRange);
    $("#slider-range").slider({
        range: true,
        min: 0,
        max: 500,
        values: [lowerRange, upperRange],
        slide: function (event, ui) {
            $("#amount").text("Consulting Fees: $" + ui.values[0] + " - $" + ui.values[1]);
            lowerRange = ui.values[0];
            upperRange = ui.values[1];
        }
    });

    function getCourts() {
        $('#courtList').empty();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetCourts")',
            dataType: 'json',
            data: { cityId: localStorage.getItem("MenuCityId") },
            success: function (courts) {
                $.each(courts, function (i, court) {
                    $('#courtList').append($('<option></option>').val(court.Id).html(court.Name));
                });
                $('#courtList').multiselect('rebuild');
            },
            error: function (ex) {
                alert('Failed to retrieve states.' + ex);
            }
        });
    }

        $("#applyFilter").click(function () {
            var courtList = selected.filter(function (itm, i, a) {
                return i == selected.indexOf(itm);
            });
            $.ajax({
                url: '@Url.Action("SetSearchLawyersParam", "Lawyers")',
                type: 'POST',
                data: {
                    "exp": $("#experience").val(),
                    "courtList": courtList,
                    "lowerFees": lowerRange,
                    "upperFees": upperRange
                },
                success: function (data) {
                    var url = '@Url.Action("SearchLawyers", "Lawyers")';
                    window.location.href = url;
                }
            });
        });
    });
</script>