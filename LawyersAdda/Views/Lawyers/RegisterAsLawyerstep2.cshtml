@model LawyersAdda.ViewModels.RegisterAsLawyerstep2ViewModel

@{
    ViewBag.Title = "RegisterAsLawyerstep2";
}

<div class="text-banner">
    <h1>Thanks for joining us as Lawyer !</h1>
</div>

<div class="col-md-8 col-md-offset-2">


    <div class="stepwizard">
        <div class="stepwizard-row setup-panel">
            <div class="stepwizard-step">
                <button class="btn btn-warning btn-circle">1</button>
                <p>Account</p>
            </div>
            <div class="stepwizard-step">
                <button class="btn btn-warning btn-circle">2</button>
                <p>Your Details</p>
            </div>
            <div class="stepwizard-step">
                <button class="btn btn-warning btn-circle" disabled="disabled">3</button>
                <p>Add Courts</p>
            </div>
            <div class="stepwizard-step">
                <button class="btn btn-warning btn-circle" disabled="disabled">4</button>
                <p>Add Services</p>
            </div>
            <div class="stepwizard-step">
                <button class="btn btn-warning btn-circle" disabled="disabled">5</button>
                <p>Add Pic</p>
            </div>
            <div class="stepwizard-step">
                <button class="btn btn-warning btn-circle" disabled="disabled">6</button>
                <p>Describe Yourself</p>
            </div>
        </div>
    </div>

    @using (Html.BeginForm("RegisterAsLawyerstep2", "Lawyers", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-group form-group-lg">
            <h3 style="text-align:center">Enter Details</h3>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group form-group-lg">
                @*@Html.LabelFor(model => model.BlogUrl, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-offset-1 col-md-10">
                    @Html.EditorFor(model => model.BlogUrl, new { htmlAttributes = new { @class = "form-control input-lg Reset", @placeholder = "Your Blog/Website URL" } })
                    @Html.ValidationMessageFor(model => model.BlogUrl, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group form-group-lg">
                @*@Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-offset-1 col-md-10">
                    @Html.DropDownListFor(model => model.City, new SelectList(ViewBag.city, "Id", "CityName"), "Select your city", new { @class = "form-control input-lg" })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group form-group-lg">
                @*@Html.LabelFor(model => model.Experience, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-offset-1 col-md-10">
                    @Html.EditorFor(model => model.Experience, new { htmlAttributes = new { @class = "form-control input-lg Reset", @placeholder = "Your Total Expereince" } })
                    @Html.ValidationMessageFor(model => model.Experience, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group form-group-lg">
                @*@Html.LabelFor(model => model.HourlyRate, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-offset-1 col-md-10">
                    @Html.EditorFor(model => model.HourlyRate, new { htmlAttributes = new { @class = "form-control input-lg Reset", @placeholder = "Your fee per hour" } })
                    @Html.ValidationMessageFor(model => model.HourlyRate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group form-group-lg">
                @*@Html.LabelFor(model => model.Dob, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-offset-1 col-md-10">
                    <div class="input-group input-append date" id='datetimepicker'>
                        @Html.EditorFor(model => model.Dob, new { htmlAttributes = new { @class = "form-control input-lg Reset", @placeholder = "Your Date Of Birth" } })
                        <span class="input-group-addon add-on">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(model => model.Dob, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group form-group-lg">
                @*@Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-offset-1 col-md-10">
                    <select id="Gender" name="Gender" class="form-control input-lg">
                        <option value="Male">Male</option>
                        <option value="Female">Female</option>
                        <option value="Other">Other</option>
                    </select>
                    @*@Html.DropDownListFor(model => model.Gender, new SelectList(new List<Object>{ 
                       new { value = "M" , text = "Male"  },
                       new { value = "F" , text = "Female" }
                    }, "value", "text", new { @class = "form-control input-lg" }))
                    @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control input-lg", @placeholder = "Gender" } })*@
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group form-group-lg">
                @*@Html.LabelFor(model => model.AlternatePhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-offset-1 col-md-10">
                    @Html.EditorFor(model => model.AlternatePhoneNumber, new { htmlAttributes = new { @class = "form-control input-lg Reset", @placeholder = "Your one more PhoneNumber" } })
                    @Html.ValidationMessageFor(model => model.AlternatePhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group form-group-lg">
                <div class="col-md-offset-1 col-md-10">
                    <input type="submit" value="Save and add Details" class="form-control btnRegister" />
                </div>
            </div>
        </div>
    }
    </div>
<link href="~/Content/bootstrap-datetimepicker.min.css" rel="stylesheet" />
<script src="~/Scripts/bootstrap-datetimepicker.min.js"></script>
<script>
    var TodayDate = "@DateTime.Now.ToString("MM/dd/yyyy")";
    $(function () {
        $(document).ready(function () {
            $('#datetimepicker').datetimepicker({
                endDate:TodayDate
            });
        });
    });
    $(".Reset").keydown(function () { reset(); });
    function reset() {
        $(".field-validation-error").empty();
    }
</script>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
